{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monty\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\OpenSupplementsInitiative\\\\client\\\\src\\\\components\\\\submission\\\\DocumentsStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Box, Typography, Button, Grid, Paper, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Alert, LinearProgress, Chip, FormControl, InputLabel, Select, MenuItem, TextField, Divider } from '@mui/material';\nimport { CloudUpload as UploadIcon, Delete as DeleteIcon, InsertDriveFile as FileIcon, CheckCircle as CheckIcon, Error as ErrorIcon, Visibility as PreviewIcon, GetApp as DownloadIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentsStep = ({\n  data,\n  updateData,\n  onNext,\n  onBack\n}) => {\n  _s();\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [uploadErrors, setUploadErrors] = useState({});\n  const fileInputRef = useRef(null);\n\n  // Document categories for organization\n  const documentCategories = [{\n    value: 'lab_test',\n    label: 'Laboratory Test Results'\n  }, {\n    value: 'factory_cert',\n    label: 'Factory Certifications (GMP, ISO)'\n  }, {\n    value: 'regulatory_approval',\n    label: 'Regulatory Approvals'\n  }, {\n    value: 'scientific_study',\n    label: 'Scientific Studies'\n  }, {\n    value: 'coa',\n    label: 'Certificate of Analysis'\n  }, {\n    value: 'safety_data',\n    label: 'Safety Data Sheets'\n  }, {\n    value: 'stability_study',\n    label: 'Stability Studies'\n  }, {\n    value: 'other',\n    label: 'Other Supporting Documents'\n  }];\n\n  // Initialize documents array if not exists\n  const documents = data.supportingDocuments || [];\n  const handleFileUpload = async (files, category) => {\n    const fileArray = Array.from(files);\n    for (const file of fileArray) {\n      const fileId = `${Date.now()}_${file.name}`;\n      try {\n        setUploadProgress(prev => ({\n          ...prev,\n          [fileId]: 0\n        }));\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('category', category);\n        formData.append('supplementId', data.id || 'new');\n        const response = await fetch('/api/documents/upload', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          },\n          body: formData\n        });\n        if (response.ok) {\n          const result = await response.json();\n          const newDocument = {\n            id: result.id,\n            fileName: file.name,\n            fileSize: file.size,\n            fileType: file.type,\n            category: category,\n            uploadedAt: new Date().toISOString(),\n            status: 'uploaded',\n            url: result.url,\n            description: '',\n            linkedTo: [] // Can link to specific ingredients or claims\n          };\n          const updatedDocuments = [...documents, newDocument];\n          updateData('supportingDocuments', updatedDocuments);\n          setUploadProgress(prev => {\n            const newProgress = {\n              ...prev\n            };\n            delete newProgress[fileId];\n            return newProgress;\n          });\n        } else {\n          throw new Error('Upload failed');\n        }\n      } catch (error) {\n        setUploadErrors(prev => ({\n          ...prev,\n          [fileId]: error.message\n        }));\n        setUploadProgress(prev => {\n          const newProgress = {\n            ...prev\n          };\n          delete newProgress[fileId];\n          return newProgress;\n        });\n      }\n    }\n  };\n  const removeDocument = index => {\n    const updatedDocuments = documents.filter((_, i) => i !== index);\n    updateData('supportingDocuments', updatedDocuments);\n  };\n  const handlePreviewDocument = doc => {\n    if (doc.fileType === 'application/pdf' || doc.fileType.startsWith('image/')) {\n      // Open in new tab for preview\n      window.open(doc.url, '_blank');\n    } else {\n      // For other file types, trigger download\n      handleDownloadDocument(doc);\n    }\n  };\n  const handleDownloadDocument = doc => {\n    // Create a temporary link to trigger download\n    const link = document.createElement('a');\n    link.href = doc.url;\n    link.download = doc.fileName;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const linkDocumentToIngredient = (docIndex, ingredientName) => {\n    const updatedDocuments = [...documents];\n    if (!updatedDocuments[docIndex].linkedTo) {\n      updatedDocuments[docIndex].linkedTo = [];\n    }\n    if (!updatedDocuments[docIndex].linkedTo.includes(ingredientName)) {\n      updatedDocuments[docIndex].linkedTo.push(ingredientName);\n    }\n    updateData('supportingDocuments', updatedDocuments);\n  };\n  const unlinkDocumentFromItem = (docIndex, itemName) => {\n    const updatedDocuments = [...documents];\n    if (updatedDocuments[docIndex].linkedTo) {\n      updatedDocuments[docIndex].linkedTo = updatedDocuments[docIndex].linkedTo.filter(item => item !== itemName);\n    }\n    updateData('supportingDocuments', updatedDocuments);\n  };\n  const downloadMockTemplate = templateType => {\n    // Create mock document templates for demo purposes\n    const templates = {\n      lab_test: {\n        name: 'Lab_Test_Results_Template.pdf',\n        content: generateMockLabTest()\n      },\n      gmp_cert: {\n        name: 'GMP_Certificate_Template.pdf',\n        content: generateMockGMPCert()\n      },\n      coa: {\n        name: 'Certificate_of_Analysis_Template.pdf',\n        content: generateMockCOA()\n      }\n    };\n    const template = templates[templateType];\n    if (template) {\n      // Create a blob with the mock content\n      const blob = new Blob([template.content], {\n        type: 'text/plain'\n      });\n      const url = URL.createObjectURL(blob);\n\n      // Create download link\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = template.name;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // Clean up\n      URL.revokeObjectURL(url);\n    }\n  };\n  const generateMockLabTest = () => {\n    return `LABORATORY TEST RESULTS - TEMPLATE\n========================================\n\nLaboratory: Accredited Testing Labs Inc.\nAddress: 123 Science Drive, Test City, TC 12345\nPhone: (555) 123-4567\nAccreditation: ISO/IEC 17025:2017\n\nSAMPLE INFORMATION\n------------------\nProduct Name: [Your Product Name]\nBatch/Lot Number: [Batch Number]\nSample Received: [Date]\nTesting Period: [Date Range]\nReport Date: [Date]\n\nTESTS PERFORMED\n---------------\n1. IDENTITY TESTING\n   - HPLC Analysis: PASS\n   - UV Spectroscopy: PASS\n   - Result: Confirmed identity of active ingredients\n\n2. PURITY TESTING\n   - Heavy Metals (Lead, Mercury, Cadmium, Arsenic): < 0.1 ppm\n   - Microbial Testing: < 10 CFU/g\n   - Pesticide Residues: Not Detected\n\n3. POTENCY TESTING\n   - Active Ingredient A: 98.5% (Spec: 95-105%)\n   - Active Ingredient B: 101.2% (Spec: 95-105%)\n\nCONCLUSION\n----------\nThe sample meets all specified requirements for identity, purity, and potency.\n\nAuthorized Signatory: Dr. Jane Smith, PhD\nLaboratory Director\nDate: [Date]\n\nNote: This is a template for demonstration purposes only.`;\n  };\n  const generateMockGMPCert = () => {\n    return `GOOD MANUFACTURING PRACTICE CERTIFICATE - TEMPLATE\n==================================================\n\nCertificate Number: GMP-2024-001\nIssue Date: [Date]\nExpiry Date: [Date + 3 years]\n\nFACILITY INFORMATION\n--------------------\nCompany Name: [Your Company Name]\nFacility Address: [Manufacturing Address]\nContact Person: [Name, Title]\nPhone: [Phone Number]\n\nCERTIFICATION DETAILS\n----------------------\nThis certificate confirms that the above facility has been inspected and found to comply with:\n- Good Manufacturing Practice (GMP) standards\n- ISO 22000:2018 Food Safety Management\n- HACCP principles\n\nSCOPE OF CERTIFICATION\n----------------------\n- Manufacturing of dietary supplements\n- Packaging and labeling operations\n- Quality control testing\n- Storage and distribution\n\nINSPECTION DETAILS\n------------------\nInspection Date: [Date]\nInspector: [Name], Certified GMP Auditor\nNext Inspection Due: [Date]\n\nCOMPLIANCE AREAS VERIFIED\n-------------------------\n✓ Personnel training and hygiene\n✓ Facility design and maintenance\n✓ Equipment calibration and maintenance\n✓ Raw material control\n✓ Production process controls\n✓ Quality control procedures\n✓ Documentation and record keeping\n✓ Complaint handling procedures\n\nIssued by: GMP Certification Body\nAuthorized Signatory: [Name]\nDate: [Date]\n\nNote: This is a template for demonstration purposes only.`;\n  };\n  const generateMockCOA = () => {\n    return `CERTIFICATE OF ANALYSIS - TEMPLATE\n===================================\n\nProduct: [Product Name]\nBatch/Lot Number: [Batch Number]\nManufacturing Date: [Date]\nExpiry Date: [Date]\nQuantity Manufactured: [Quantity]\n\nRAW MATERIAL ANALYSIS\n---------------------\nIngredient A:\n- Supplier: [Supplier Name]\n- Lot Number: [Lot Number]\n- Assay: 99.2% (Spec: ≥98%)\n- Heavy Metals: <0.1 ppm\n- Microbiological: Pass\n\nIngredient B:\n- Supplier: [Supplier Name]\n- Lot Number: [Lot Number]\n- Assay: 100.8% (Spec: 98-102%)\n- Moisture: 2.1% (Spec: ≤5%)\n- Microbiological: Pass\n\nFINISHED PRODUCT TESTING\n------------------------\nPhysical Tests:\n- Appearance: White to off-white tablets\n- Weight: 500mg ± 5%\n- Hardness: 8.5 kp (Spec: 6-12 kp)\n- Disintegration: 12 minutes (Spec: ≤15 min)\n\nChemical Tests:\n- Active Ingredient A: 248mg (Spec: 240-260mg)\n- Active Ingredient B: 52mg (Spec: 50-55mg)\n- Total Plate Count: <10 CFU/g\n- Yeast & Mold: <10 CFU/g\n\nSTABILITY DATA\n--------------\nStorage Conditions: 25°C/60% RH\n- 0 months: 100.0%\n- 6 months: 99.8%\n- 12 months: 99.2%\n- 18 months: 98.9%\n\nCONCLUSION\n----------\nThis batch meets all specifications and is approved for release.\n\nQuality Control Manager: [Name]\nDate: [Date]\nSignature: [Signature]\n\nNote: This is a template for demonstration purposes only.`;\n  };\n  const updateDocumentDescription = (index, description) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index].description = description;\n    updateData('supportingDocuments', updatedDocuments);\n  };\n  const getDocumentsByCategory = category => {\n    return documents.filter(doc => doc.category === category);\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const getRequiredDocuments = () => {\n    return [{\n      category: 'lab_test',\n      title: 'Laboratory Test Results',\n      description: 'Third-party lab tests for identity, purity, and potency of active ingredients',\n      required: true\n    }, {\n      category: 'factory_cert',\n      title: 'Manufacturing Certifications',\n      description: 'GMP certificates, facility licenses, and quality system certifications',\n      required: true\n    }, {\n      category: 'coa',\n      title: 'Certificate of Analysis',\n      description: 'COA for each batch of raw materials and finished product',\n      required: true\n    }, {\n      category: 'scientific_study',\n      title: 'Scientific Evidence',\n      description: 'Published studies supporting health claims (if applicable)',\n      required: false\n    }];\n  };\n  const isFormValid = () => {\n    const requiredDocs = getRequiredDocuments().filter(doc => doc.required);\n    return requiredDocs.every(reqDoc => getDocumentsByCategory(reqDoc.category).length > 0);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Supporting Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 3\n      },\n      children: \"Upload all required supporting documents to verify your product claims and manufacturing quality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Document Requirements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: getRequiredDocuments().map(reqDoc => {\n          const uploadedDocs = getDocumentsByCategory(reqDoc.category);\n          const isComplete = uploadedDocs.length > 0;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                border: 1,\n                borderColor: isComplete ? 'success.main' : reqDoc.required ? 'error.main' : 'grey.300',\n                borderRadius: 1,\n                bgcolor: isComplete ? 'success.light' : 'background.paper'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 1\n                },\n                children: [isComplete ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                  color: \"success\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this) : reqDoc.required ? /*#__PURE__*/_jsxDEV(ErrorIcon, {\n                  color: \"error\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(FileIcon, {\n                  color: \"action\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: [reqDoc.title, reqDoc.required && /*#__PURE__*/_jsxDEV(Chip, {\n                    label: \"Required\",\n                    size: \"small\",\n                    color: \"error\",\n                    sx: {\n                      ml: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 1\n                },\n                children: reqDoc.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: isComplete ? 'success.main' : 'text.secondary',\n                children: [uploadedDocs.length, \" document\", uploadedDocs.length !== 1 ? 's' : '', \" uploaded\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)\n          }, reqDoc.category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), documentCategories.map(category => /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: category.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 26\n          }, this),\n          onClick: () => {\n            fileInputRef.current.click();\n            fileInputRef.current.onchange = e => {\n              if (e.target.files.length > 0) {\n                handleFileUpload(e.target.files, category.value);\n              }\n            };\n          },\n          children: \"Upload Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: getDocumentsByCategory(category.value).map((doc, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n            sx: {\n              mr: 2,\n              color: 'primary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: doc.status,\n                size: \"small\",\n                color: doc.status === 'uploaded' ? 'success' : 'default'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: [formatFileSize(doc.fileSize), \" \\u2022 Uploaded \", new Date(doc.uploadedAt).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Description (optional)\",\n                value: doc.description,\n                onChange: e => updateDocumentDescription(documents.findIndex(d => d.id === doc.id), e.target.value),\n                sx: {\n                  mt: 1\n                },\n                helperText: \"Describe what this document contains or proves\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 23\n              }, this), doc.linkedTo && doc.linkedTo.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: \"Linked to:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 0.5,\n                    mt: 0.5\n                  },\n                  children: doc.linkedTo.map((item, idx) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: item,\n                    size: \"small\",\n                    variant: \"outlined\",\n                    onDelete: () => unlinkDocumentFromItem(documents.findIndex(d => d.id === doc.id), item)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                onClick: () => handlePreviewDocument(doc),\n                title: \"Preview/View Document\",\n                children: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"secondary\",\n                onClick: () => handleDownloadDocument(doc),\n                title: \"Download Document\",\n                children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"error\",\n                onClick: () => removeDocument(documents.findIndex(d => d.id === doc.id)),\n                title: \"Delete Document\",\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this)]\n        }, doc.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this), getDocumentsByCategory(category.value).length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mt: 2\n        },\n        children: \"No documents uploaded for this category yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 13\n      }, this)]\n    }, category.value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }, this)), Object.keys(uploadProgress).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Uploading Files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this), Object.entries(uploadProgress).map(([fileId, progress]) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: fileId.split('_').slice(1).join('_')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 15\n        }, this)]\n      }, fileId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 9\n    }, this), Object.keys(uploadErrors).length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: \"Upload Errors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this), Object.entries(uploadErrors).map(([fileId, error]) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [fileId.split('_').slice(1).join('_'), \": \", error]\n      }, fileId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      multiple: true,\n      accept: \".pdf,.doc,.docx,.jpg,.jpeg,.png,.xls,.xlsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3,\n        bgcolor: 'secondary.light'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Document Templates (Demo)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mb: 2\n        },\n        children: \"Download these sample templates to understand the required document formats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            fullWidth: true,\n            startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 26\n            }, this),\n            onClick: () => downloadMockTemplate('lab_test'),\n            children: \"Lab Test Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            fullWidth: true,\n            startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 26\n            }, this),\n            onClick: () => downloadMockTemplate('gmp_cert'),\n            children: \"GMP Certificate Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            fullWidth: true,\n            startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 26\n            }, this),\n            onClick: () => downloadMockTemplate('coa'),\n            children: \"COA Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this), documents.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Link Documents to Ingredients/Claims\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 2\n        },\n        children: \"Connect your documents to specific ingredients or health claims for better traceability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this), documents.map((doc, docIndex) => {\n        var _data$components, _data$components$, _data$components$$act, _data$permittedIndica;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            p: 2,\n            border: 1,\n            borderColor: 'grey.300',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 1\n            },\n            children: doc.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Link to Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: \"\",\n                  onChange: e => linkDocumentToIngredient(docIndex, e.target.value),\n                  label: \"Link to Ingredient\",\n                  children: (_data$components = data.components) === null || _data$components === void 0 ? void 0 : (_data$components$ = _data$components[0]) === null || _data$components$ === void 0 ? void 0 : (_data$components$$act = _data$components$.activeIngredients) === null || _data$components$$act === void 0 ? void 0 : _data$components$$act.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ingredient.commonName || ingredient.name,\n                    children: ingredient.commonName || ingredient.name\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Link to Health Claim\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: \"\",\n                  onChange: e => linkDocumentToIngredient(docIndex, `Claim: ${e.target.value}`),\n                  label: \"Link to Health Claim\",\n                  children: (_data$permittedIndica = data.permittedIndications) === null || _data$permittedIndica === void 0 ? void 0 : _data$permittedIndica.map((claim, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: claim.text,\n                    children: [claim.text.substring(0, 50), \"...\"]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), doc.linkedTo && doc.linkedTo.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              children: \"Currently linked to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5,\n                mt: 0.5\n              },\n              children: doc.linkedTo.map((item, idx) => /*#__PURE__*/_jsxDEV(Chip, {\n                label: item,\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"primary\",\n                onDelete: () => unlinkDocumentFromItem(docIndex, item)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 17\n          }, this)]\n        }, doc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3,\n        bgcolor: 'info.light'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Document Guidelines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"div\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"All documents must be in English or include certified translations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Laboratory tests must be from accredited third-party laboratories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Certificates must be current and not expired\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"File formats accepted: PDF, DOC, DOCX, JPG, PNG, XLS, XLSX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Maximum file size: 10MB per file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ensure all documents are clearly legible and complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this), !isFormValid() && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: \"Missing Required Documents:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }, this), getRequiredDocuments().filter(reqDoc => reqDoc.required && getDocumentsByCategory(reqDoc.category).length === 0).map(reqDoc => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"\\u2022 \", reqDoc.title]\n      }, reqDoc.category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onBack,\n        size: \"large\",\n        children: \"Back: Health Claims\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: onNext,\n        disabled: !isFormValid(),\n        size: \"large\",\n        children: \"Next: Review & Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentsStep, \"85Adqq7s3bnTtO51O+SBRfTcX4M=\");\n_c = DocumentsStep;\nexport default DocumentsStep;\nvar _c;\n$RefreshReg$(_c, \"DocumentsStep\");","map":{"version":3,"names":["React","useState","useRef","Box","Typography","Button","Grid","Paper","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Alert","LinearProgress","Chip","FormControl","InputLabel","Select","MenuItem","TextField","Divider","CloudUpload","UploadIcon","Delete","DeleteIcon","InsertDriveFile","FileIcon","CheckCircle","CheckIcon","Error","ErrorIcon","Visibility","PreviewIcon","GetApp","DownloadIcon","jsxDEV","_jsxDEV","DocumentsStep","data","updateData","onNext","onBack","_s","uploadProgress","setUploadProgress","uploadErrors","setUploadErrors","fileInputRef","documentCategories","value","label","documents","supportingDocuments","handleFileUpload","files","category","fileArray","Array","from","file","fileId","Date","now","name","prev","formData","FormData","append","id","response","fetch","method","headers","localStorage","getItem","body","ok","result","json","newDocument","fileName","fileSize","size","fileType","type","uploadedAt","toISOString","status","url","description","linkedTo","updatedDocuments","newProgress","error","message","removeDocument","index","filter","_","i","handlePreviewDocument","doc","startsWith","window","open","handleDownloadDocument","link","document","createElement","href","download","appendChild","click","removeChild","linkDocumentToIngredient","docIndex","ingredientName","includes","push","unlinkDocumentFromItem","itemName","item","downloadMockTemplate","templateType","templates","lab_test","content","generateMockLabTest","gmp_cert","generateMockGMPCert","coa","generateMockCOA","template","blob","Blob","URL","createObjectURL","revokeObjectURL","updateDocumentDescription","getDocumentsByCategory","formatFileSize","bytes","k","sizes","Math","floor","log","parseFloat","pow","toFixed","getRequiredDocuments","title","required","isFormValid","requiredDocs","every","reqDoc","length","children","variant","gutterBottom","_jsxFileName","lineNumber","columnNumber","color","sx","mb","p","container","spacing","map","uploadedDocs","isComplete","xs","md","border","borderColor","borderRadius","bgcolor","display","alignItems","mr","ml","justifyContent","startIcon","onClick","current","onchange","e","target","divider","primary","gap","secondary","toLocaleDateString","fullWidth","onChange","findIndex","d","mt","helperText","flexWrap","idx","onDelete","severity","Object","keys","entries","progress","split","slice","join","ref","style","multiple","accept","_data$components","_data$components$","_data$components$$act","_data$permittedIndica","components","activeIngredients","ingredient","commonName","permittedIndications","claim","text","substring","component","disabled","_c","$RefreshReg$"],"sources":["C:/Users/monty/OneDrive/ドキュメント/OpenSupplementsInitiative/client/src/components/submission/DocumentsStep.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Alert,\r\n  LinearProgress,\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Divider\r\n} from '@mui/material';\r\nimport {\r\n  CloudUpload as UploadIcon,\r\n  Delete as DeleteIcon,\r\n  InsertDriveFile as FileIcon,\r\n  CheckCircle as CheckIcon,\r\n  Error as ErrorIcon,\r\n  Visibility as PreviewIcon,\r\n  GetApp as DownloadIcon\r\n} from '@mui/icons-material';\r\n\r\nconst DocumentsStep = ({ data, updateData, onNext, onBack }) => {\r\n  const [uploadProgress, setUploadProgress] = useState({});\r\n  const [uploadErrors, setUploadErrors] = useState({});\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Document categories for organization\r\n  const documentCategories = [\r\n    { value: 'lab_test', label: 'Laboratory Test Results' },\r\n    { value: 'factory_cert', label: 'Factory Certifications (GMP, ISO)' },\r\n    { value: 'regulatory_approval', label: 'Regulatory Approvals' },\r\n    { value: 'scientific_study', label: 'Scientific Studies' },\r\n    { value: 'coa', label: 'Certificate of Analysis' },\r\n    { value: 'safety_data', label: 'Safety Data Sheets' },\r\n    { value: 'stability_study', label: 'Stability Studies' },\r\n    { value: 'other', label: 'Other Supporting Documents' }\r\n  ];\r\n\r\n  // Initialize documents array if not exists\r\n  const documents = data.supportingDocuments || [];\r\n\r\n  const handleFileUpload = async (files, category) => {\r\n    const fileArray = Array.from(files);\r\n    \r\n    for (const file of fileArray) {\r\n      const fileId = `${Date.now()}_${file.name}`;\r\n      \r\n      try {\r\n        setUploadProgress(prev => ({ ...prev, [fileId]: 0 }));\r\n        \r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('category', category);\r\n        formData.append('supplementId', data.id || 'new');\r\n\r\n        const response = await fetch('/api/documents/upload', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          },\r\n          body: formData\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          \r\n          const newDocument = {\r\n            id: result.id,\r\n            fileName: file.name,\r\n            fileSize: file.size,\r\n            fileType: file.type,\r\n            category: category,\r\n            uploadedAt: new Date().toISOString(),\r\n            status: 'uploaded',\r\n            url: result.url,\r\n            description: '',\r\n            linkedTo: [] // Can link to specific ingredients or claims\r\n          };\r\n\r\n          const updatedDocuments = [...documents, newDocument];\r\n          updateData('supportingDocuments', updatedDocuments);\r\n          \r\n          setUploadProgress(prev => {\r\n            const newProgress = { ...prev };\r\n            delete newProgress[fileId];\r\n            return newProgress;\r\n          });\r\n        } else {\r\n          throw new Error('Upload failed');\r\n        }\r\n      } catch (error) {\r\n        setUploadErrors(prev => ({ ...prev, [fileId]: error.message }));\r\n        setUploadProgress(prev => {\r\n          const newProgress = { ...prev };\r\n          delete newProgress[fileId];\r\n          return newProgress;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeDocument = (index) => {\r\n    const updatedDocuments = documents.filter((_, i) => i !== index);\r\n    updateData('supportingDocuments', updatedDocuments);\r\n  };\r\n\r\n  const handlePreviewDocument = (doc) => {\r\n    if (doc.fileType === 'application/pdf' || doc.fileType.startsWith('image/')) {\r\n      // Open in new tab for preview\r\n      window.open(doc.url, '_blank');\r\n    } else {\r\n      // For other file types, trigger download\r\n      handleDownloadDocument(doc);\r\n    }\r\n  };\r\n\r\n  const handleDownloadDocument = (doc) => {\r\n    // Create a temporary link to trigger download\r\n    const link = document.createElement('a');\r\n    link.href = doc.url;\r\n    link.download = doc.fileName;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const linkDocumentToIngredient = (docIndex, ingredientName) => {\r\n    const updatedDocuments = [...documents];\r\n    if (!updatedDocuments[docIndex].linkedTo) {\r\n      updatedDocuments[docIndex].linkedTo = [];\r\n    }\r\n    if (!updatedDocuments[docIndex].linkedTo.includes(ingredientName)) {\r\n      updatedDocuments[docIndex].linkedTo.push(ingredientName);\r\n    }\r\n    updateData('supportingDocuments', updatedDocuments);\r\n  };\r\n\r\n  const unlinkDocumentFromItem = (docIndex, itemName) => {\r\n    const updatedDocuments = [...documents];\r\n    if (updatedDocuments[docIndex].linkedTo) {\r\n      updatedDocuments[docIndex].linkedTo = updatedDocuments[docIndex].linkedTo.filter(\r\n        item => item !== itemName\r\n      );\r\n    }\r\n    updateData('supportingDocuments', updatedDocuments);\r\n  };\r\n\r\n  const downloadMockTemplate = (templateType) => {\r\n    // Create mock document templates for demo purposes\r\n    const templates = {\r\n      lab_test: {\r\n        name: 'Lab_Test_Results_Template.pdf',\r\n        content: generateMockLabTest()\r\n      },\r\n      gmp_cert: {\r\n        name: 'GMP_Certificate_Template.pdf',\r\n        content: generateMockGMPCert()\r\n      },\r\n      coa: {\r\n        name: 'Certificate_of_Analysis_Template.pdf',\r\n        content: generateMockCOA()\r\n      }\r\n    };\r\n\r\n    const template = templates[templateType];\r\n    if (template) {\r\n      // Create a blob with the mock content\r\n      const blob = new Blob([template.content], { type: 'text/plain' });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      // Create download link\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = template.name;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      // Clean up\r\n      URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  const generateMockLabTest = () => {\r\n    return `LABORATORY TEST RESULTS - TEMPLATE\r\n========================================\r\n\r\nLaboratory: Accredited Testing Labs Inc.\r\nAddress: 123 Science Drive, Test City, TC 12345\r\nPhone: (555) 123-4567\r\nAccreditation: ISO/IEC 17025:2017\r\n\r\nSAMPLE INFORMATION\r\n------------------\r\nProduct Name: [Your Product Name]\r\nBatch/Lot Number: [Batch Number]\r\nSample Received: [Date]\r\nTesting Period: [Date Range]\r\nReport Date: [Date]\r\n\r\nTESTS PERFORMED\r\n---------------\r\n1. IDENTITY TESTING\r\n   - HPLC Analysis: PASS\r\n   - UV Spectroscopy: PASS\r\n   - Result: Confirmed identity of active ingredients\r\n\r\n2. PURITY TESTING\r\n   - Heavy Metals (Lead, Mercury, Cadmium, Arsenic): < 0.1 ppm\r\n   - Microbial Testing: < 10 CFU/g\r\n   - Pesticide Residues: Not Detected\r\n\r\n3. POTENCY TESTING\r\n   - Active Ingredient A: 98.5% (Spec: 95-105%)\r\n   - Active Ingredient B: 101.2% (Spec: 95-105%)\r\n\r\nCONCLUSION\r\n----------\r\nThe sample meets all specified requirements for identity, purity, and potency.\r\n\r\nAuthorized Signatory: Dr. Jane Smith, PhD\r\nLaboratory Director\r\nDate: [Date]\r\n\r\nNote: This is a template for demonstration purposes only.`;\r\n  };\r\n\r\n  const generateMockGMPCert = () => {\r\n    return `GOOD MANUFACTURING PRACTICE CERTIFICATE - TEMPLATE\r\n==================================================\r\n\r\nCertificate Number: GMP-2024-001\r\nIssue Date: [Date]\r\nExpiry Date: [Date + 3 years]\r\n\r\nFACILITY INFORMATION\r\n--------------------\r\nCompany Name: [Your Company Name]\r\nFacility Address: [Manufacturing Address]\r\nContact Person: [Name, Title]\r\nPhone: [Phone Number]\r\n\r\nCERTIFICATION DETAILS\r\n----------------------\r\nThis certificate confirms that the above facility has been inspected and found to comply with:\r\n- Good Manufacturing Practice (GMP) standards\r\n- ISO 22000:2018 Food Safety Management\r\n- HACCP principles\r\n\r\nSCOPE OF CERTIFICATION\r\n----------------------\r\n- Manufacturing of dietary supplements\r\n- Packaging and labeling operations\r\n- Quality control testing\r\n- Storage and distribution\r\n\r\nINSPECTION DETAILS\r\n------------------\r\nInspection Date: [Date]\r\nInspector: [Name], Certified GMP Auditor\r\nNext Inspection Due: [Date]\r\n\r\nCOMPLIANCE AREAS VERIFIED\r\n-------------------------\r\n✓ Personnel training and hygiene\r\n✓ Facility design and maintenance\r\n✓ Equipment calibration and maintenance\r\n✓ Raw material control\r\n✓ Production process controls\r\n✓ Quality control procedures\r\n✓ Documentation and record keeping\r\n✓ Complaint handling procedures\r\n\r\nIssued by: GMP Certification Body\r\nAuthorized Signatory: [Name]\r\nDate: [Date]\r\n\r\nNote: This is a template for demonstration purposes only.`;\r\n  };\r\n\r\n  const generateMockCOA = () => {\r\n    return `CERTIFICATE OF ANALYSIS - TEMPLATE\r\n===================================\r\n\r\nProduct: [Product Name]\r\nBatch/Lot Number: [Batch Number]\r\nManufacturing Date: [Date]\r\nExpiry Date: [Date]\r\nQuantity Manufactured: [Quantity]\r\n\r\nRAW MATERIAL ANALYSIS\r\n---------------------\r\nIngredient A:\r\n- Supplier: [Supplier Name]\r\n- Lot Number: [Lot Number]\r\n- Assay: 99.2% (Spec: ≥98%)\r\n- Heavy Metals: <0.1 ppm\r\n- Microbiological: Pass\r\n\r\nIngredient B:\r\n- Supplier: [Supplier Name]\r\n- Lot Number: [Lot Number]\r\n- Assay: 100.8% (Spec: 98-102%)\r\n- Moisture: 2.1% (Spec: ≤5%)\r\n- Microbiological: Pass\r\n\r\nFINISHED PRODUCT TESTING\r\n------------------------\r\nPhysical Tests:\r\n- Appearance: White to off-white tablets\r\n- Weight: 500mg ± 5%\r\n- Hardness: 8.5 kp (Spec: 6-12 kp)\r\n- Disintegration: 12 minutes (Spec: ≤15 min)\r\n\r\nChemical Tests:\r\n- Active Ingredient A: 248mg (Spec: 240-260mg)\r\n- Active Ingredient B: 52mg (Spec: 50-55mg)\r\n- Total Plate Count: <10 CFU/g\r\n- Yeast & Mold: <10 CFU/g\r\n\r\nSTABILITY DATA\r\n--------------\r\nStorage Conditions: 25°C/60% RH\r\n- 0 months: 100.0%\r\n- 6 months: 99.8%\r\n- 12 months: 99.2%\r\n- 18 months: 98.9%\r\n\r\nCONCLUSION\r\n----------\r\nThis batch meets all specifications and is approved for release.\r\n\r\nQuality Control Manager: [Name]\r\nDate: [Date]\r\nSignature: [Signature]\r\n\r\nNote: This is a template for demonstration purposes only.`;\r\n  };\r\n\r\n  const updateDocumentDescription = (index, description) => {\r\n    const updatedDocuments = [...documents];\r\n    updatedDocuments[index].description = description;\r\n    updateData('supportingDocuments', updatedDocuments);\r\n  };\r\n\r\n  const getDocumentsByCategory = (category) => {\r\n    return documents.filter(doc => doc.category === category);\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const getRequiredDocuments = () => {\r\n    return [\r\n      {\r\n        category: 'lab_test',\r\n        title: 'Laboratory Test Results',\r\n        description: 'Third-party lab tests for identity, purity, and potency of active ingredients',\r\n        required: true\r\n      },\r\n      {\r\n        category: 'factory_cert',\r\n        title: 'Manufacturing Certifications',\r\n        description: 'GMP certificates, facility licenses, and quality system certifications',\r\n        required: true\r\n      },\r\n      {\r\n        category: 'coa',\r\n        title: 'Certificate of Analysis',\r\n        description: 'COA for each batch of raw materials and finished product',\r\n        required: true\r\n      },\r\n      {\r\n        category: 'scientific_study',\r\n        title: 'Scientific Evidence',\r\n        description: 'Published studies supporting health claims (if applicable)',\r\n        required: false\r\n      }\r\n    ];\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    const requiredDocs = getRequiredDocuments().filter(doc => doc.required);\r\n    return requiredDocs.every(reqDoc => \r\n      getDocumentsByCategory(reqDoc.category).length > 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Supporting Documents\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n        Upload all required supporting documents to verify your product claims and manufacturing quality\r\n      </Typography>\r\n\r\n      {/* Document Requirements Overview */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Document Requirements\r\n        </Typography>\r\n        \r\n        <Grid container spacing={2}>\r\n          {getRequiredDocuments().map((reqDoc) => {\r\n            const uploadedDocs = getDocumentsByCategory(reqDoc.category);\r\n            const isComplete = uploadedDocs.length > 0;\r\n            \r\n            return (\r\n              <Grid item xs={12} md={6} key={reqDoc.category}>\r\n                <Box sx={{ \r\n                  p: 2, \r\n                  border: 1, \r\n                  borderColor: isComplete ? 'success.main' : reqDoc.required ? 'error.main' : 'grey.300',\r\n                  borderRadius: 1,\r\n                  bgcolor: isComplete ? 'success.light' : 'background.paper'\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                    {isComplete ? (\r\n                      <CheckIcon color=\"success\" sx={{ mr: 1 }} />\r\n                    ) : reqDoc.required ? (\r\n                      <ErrorIcon color=\"error\" sx={{ mr: 1 }} />\r\n                    ) : (\r\n                      <FileIcon color=\"action\" sx={{ mr: 1 }} />\r\n                    )}\r\n                    <Typography variant=\"subtitle1\">\r\n                      {reqDoc.title}\r\n                      {reqDoc.required && <Chip label=\"Required\" size=\"small\" color=\"error\" sx={{ ml: 1 }} />}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                    {reqDoc.description}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color={isComplete ? 'success.main' : 'text.secondary'}>\r\n                    {uploadedDocs.length} document{uploadedDocs.length !== 1 ? 's' : ''} uploaded\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Document Upload Sections */}\r\n      {documentCategories.map((category) => (\r\n        <Paper key={category.value} sx={{ p: 3, mb: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\">\r\n              {category.label}\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<UploadIcon />}\r\n              onClick={() => {\r\n                fileInputRef.current.click();\r\n                fileInputRef.current.onchange = (e) => {\r\n                  if (e.target.files.length > 0) {\r\n                    handleFileUpload(e.target.files, category.value);\r\n                  }\r\n                };\r\n              }}\r\n            >\r\n              Upload Files\r\n            </Button>\r\n          </Box>\r\n\r\n          {/* Uploaded Documents List */}\r\n          <List>\r\n            {getDocumentsByCategory(category.value).map((doc, index) => (\r\n              <ListItem key={doc.id || index} divider>\r\n                <FileIcon sx={{ mr: 2, color: 'primary.main' }} />\r\n                <ListItemText\r\n                  primary={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <Typography variant=\"body1\">{doc.fileName}</Typography>\r\n                      <Chip \r\n                        label={doc.status} \r\n                        size=\"small\" \r\n                        color={doc.status === 'uploaded' ? 'success' : 'default'}\r\n                      />\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Box>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {formatFileSize(doc.fileSize)} • Uploaded {new Date(doc.uploadedAt).toLocaleDateString()}\r\n                      </Typography>\r\n                      <TextField\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        label=\"Description (optional)\"\r\n                        value={doc.description}\r\n                        onChange={(e) => updateDocumentDescription(\r\n                          documents.findIndex(d => d.id === doc.id), \r\n                          e.target.value\r\n                        )}\r\n                        sx={{ mt: 1 }}\r\n                        helperText=\"Describe what this document contains or proves\"\r\n                      />\r\n                      {/* Document Linking */}\r\n                      {doc.linkedTo && doc.linkedTo.length > 0 && (\r\n                        <Box sx={{ mt: 1 }}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            Linked to:\r\n                          </Typography>\r\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\r\n                            {doc.linkedTo.map((item, idx) => (\r\n                              <Chip\r\n                                key={idx}\r\n                                label={item}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onDelete={() => unlinkDocumentFromItem(documents.findIndex(d => d.id === doc.id), item)}\r\n                              />\r\n                            ))}\r\n                          </Box>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={() => handlePreviewDocument(doc)}\r\n                      title=\"Preview/View Document\"\r\n                    >\r\n                      <PreviewIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      onClick={() => handleDownloadDocument(doc)}\r\n                      title=\"Download Document\"\r\n                    >\r\n                      <DownloadIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      color=\"error\"\r\n                      onClick={() => removeDocument(documents.findIndex(d => d.id === doc.id))}\r\n                      title=\"Delete Document\"\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Box>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n\r\n          {getDocumentsByCategory(category.value).length === 0 && (\r\n            <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n              No documents uploaded for this category yet\r\n            </Alert>\r\n          )}\r\n        </Paper>\r\n      ))}\r\n\r\n      {/* Upload Progress */}\r\n      {Object.keys(uploadProgress).length > 0 && (\r\n        <Paper sx={{ p: 2, mb: 3 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Uploading Files...\r\n          </Typography>\r\n          {Object.entries(uploadProgress).map(([fileId, progress]) => (\r\n            <Box key={fileId} sx={{ mb: 1 }}>\r\n              <Typography variant=\"body2\">{fileId.split('_').slice(1).join('_')}</Typography>\r\n              <LinearProgress variant=\"determinate\" value={progress} />\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      )}\r\n\r\n      {/* Upload Errors */}\r\n      {Object.keys(uploadErrors).length > 0 && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\">Upload Errors:</Typography>\r\n          {Object.entries(uploadErrors).map(([fileId, error]) => (\r\n            <Typography key={fileId} variant=\"body2\">\r\n              {fileId.split('_').slice(1).join('_')}: {error}\r\n            </Typography>\r\n          ))}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Hidden File Input */}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n        multiple\r\n        accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png,.xls,.xlsx\"\r\n      />\r\n\r\n      {/* Mock Document Templates */}\r\n      <Paper sx={{ p: 3, mb: 3, bgcolor: 'secondary.light' }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Document Templates (Demo)\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n          Download these sample templates to understand the required document formats:\r\n        </Typography>\r\n        \r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              startIcon={<DownloadIcon />}\r\n              onClick={() => downloadMockTemplate('lab_test')}\r\n            >\r\n              Lab Test Template\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              startIcon={<DownloadIcon />}\r\n              onClick={() => downloadMockTemplate('gmp_cert')}\r\n            >\r\n              GMP Certificate Template\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              startIcon={<DownloadIcon />}\r\n              onClick={() => downloadMockTemplate('coa')}\r\n            >\r\n              COA Template\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Document Linking Interface */}\r\n      {documents.length > 0 && (\r\n        <Paper sx={{ p: 3, mb: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Link Documents to Ingredients/Claims\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            Connect your documents to specific ingredients or health claims for better traceability\r\n          </Typography>\r\n          \r\n          {documents.map((doc, docIndex) => (\r\n            <Box key={doc.id} sx={{ mb: 3, p: 2, border: 1, borderColor: 'grey.300', borderRadius: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n                {doc.fileName}\r\n              </Typography>\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl fullWidth size=\"small\">\r\n                    <InputLabel>Link to Ingredient</InputLabel>\r\n                    <Select\r\n                      value=\"\"\r\n                      onChange={(e) => linkDocumentToIngredient(docIndex, e.target.value)}\r\n                      label=\"Link to Ingredient\"\r\n                    >\r\n                      {data.components?.[0]?.activeIngredients?.map((ingredient, idx) => (\r\n                        <MenuItem key={idx} value={ingredient.commonName || ingredient.name}>\r\n                          {ingredient.commonName || ingredient.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={6}>\r\n                  <FormControl fullWidth size=\"small\">\r\n                    <InputLabel>Link to Health Claim</InputLabel>\r\n                    <Select\r\n                      value=\"\"\r\n                      onChange={(e) => linkDocumentToIngredient(docIndex, `Claim: ${e.target.value}`)}\r\n                      label=\"Link to Health Claim\"\r\n                    >\r\n                      {data.permittedIndications?.map((claim, idx) => (\r\n                        <MenuItem key={idx} value={claim.text}>\r\n                          {claim.text.substring(0, 50)}...\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              {doc.linkedTo && doc.linkedTo.length > 0 && (\r\n                <Box sx={{ mt: 2 }}>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    Currently linked to:\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\r\n                    {doc.linkedTo.map((item, idx) => (\r\n                      <Chip\r\n                        key={idx}\r\n                        label={item}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onDelete={() => unlinkDocumentFromItem(docIndex, item)}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      )}\r\n\r\n      {/* Document Guidelines */}\r\n      <Paper sx={{ p: 3, mb: 3, bgcolor: 'info.light' }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Document Guidelines\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"div\">\r\n          <ul>\r\n            <li>All documents must be in English or include certified translations</li>\r\n            <li>Laboratory tests must be from accredited third-party laboratories</li>\r\n            <li>Certificates must be current and not expired</li>\r\n            <li>File formats accepted: PDF, DOC, DOCX, JPG, PNG, XLS, XLSX</li>\r\n            <li>Maximum file size: 10MB per file</li>\r\n            <li>Ensure all documents are clearly legible and complete</li>\r\n          </ul>\r\n        </Typography>\r\n      </Paper>\r\n\r\n      {/* Validation Summary */}\r\n      {!isFormValid() && (\r\n        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\">Missing Required Documents:</Typography>\r\n          {getRequiredDocuments()\r\n            .filter(reqDoc => reqDoc.required && getDocumentsByCategory(reqDoc.category).length === 0)\r\n            .map(reqDoc => (\r\n              <Typography key={reqDoc.category} variant=\"body2\">\r\n                • {reqDoc.title}\r\n              </Typography>\r\n            ))}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Navigation */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 3 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={onBack}\r\n          size=\"large\"\r\n        >\r\n          Back: Health Claims\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={onNext}\r\n          disabled={!isFormValid()}\r\n          size=\"large\"\r\n        >\r\n          Next: Review & Submit\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DocumentsStep;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}