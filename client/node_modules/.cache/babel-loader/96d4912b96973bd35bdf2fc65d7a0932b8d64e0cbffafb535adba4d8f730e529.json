{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monty\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\OpenSupplementsInitiative\\\\client\\\\src\\\\components\\\\submission\\\\DocumentsStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Box, Typography, Button, Grid, Paper, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Alert, LinearProgress, Chip, FormControl, InputLabel, Select, MenuItem, TextField, Divider } from '@mui/material';\nimport { CloudUpload as UploadIcon, Delete as DeleteIcon, InsertDriveFile as FileIcon, CheckCircle as CheckIcon, Error as ErrorIcon, Visibility as PreviewIcon, GetApp as DownloadIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentsStep = ({\n  data,\n  updateData,\n  onNext,\n  onBack\n}) => {\n  _s();\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [uploadErrors, setUploadErrors] = useState({});\n  const fileInputRef = useRef(null);\n\n  // Document categories for organization\n  const documentCategories = [{\n    value: 'lab_test',\n    label: 'Laboratory Test Results'\n  }, {\n    value: 'factory_cert',\n    label: 'Factory Certifications (GMP, ISO)'\n  }, {\n    value: 'regulatory_approval',\n    label: 'Regulatory Approvals'\n  }, {\n    value: 'scientific_study',\n    label: 'Scientific Studies'\n  }, {\n    value: 'coa',\n    label: 'Certificate of Analysis'\n  }, {\n    value: 'safety_data',\n    label: 'Safety Data Sheets'\n  }, {\n    value: 'stability_study',\n    label: 'Stability Studies'\n  }, {\n    value: 'other',\n    label: 'Other Supporting Documents'\n  }];\n\n  // Initialize documents array if not exists\n  const documents = data.supportingDocuments || [];\n  const handleFileUpload = async (files, category) => {\n    const fileArray = Array.from(files);\n    for (const file of fileArray) {\n      const fileId = `${Date.now()}_${file.name}`;\n      try {\n        setUploadProgress(prev => ({\n          ...prev,\n          [fileId]: 0\n        }));\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('category', category);\n        formData.append('supplementId', data.id || 'new');\n        const response = await fetch('/api/documents/upload', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          },\n          body: formData\n        });\n        if (response.ok) {\n          const result = await response.json();\n          const newDocument = {\n            id: result.id,\n            fileName: file.name,\n            fileSize: file.size,\n            fileType: file.type,\n            category: category,\n            uploadedAt: new Date().toISOString(),\n            status: 'uploaded',\n            url: result.url,\n            description: '',\n            linkedTo: [] // Can link to specific ingredients or claims\n          };\n          const updatedDocuments = [...documents, newDocument];\n          updateData('supportingDocuments', updatedDocuments);\n          setUploadProgress(prev => {\n            const newProgress = {\n              ...prev\n            };\n            delete newProgress[fileId];\n            return newProgress;\n          });\n        } else {\n          throw new Error('Upload failed');\n        }\n      } catch (error) {\n        setUploadErrors(prev => ({\n          ...prev,\n          [fileId]: error.message\n        }));\n        setUploadProgress(prev => {\n          const newProgress = {\n            ...prev\n          };\n          delete newProgress[fileId];\n          return newProgress;\n        });\n      }\n    }\n  };\n  const removeDocument = index => {\n    const updatedDocuments = documents.filter((_, i) => i !== index);\n    updateData('supportingDocuments', updatedDocuments);\n  };\n  const updateDocumentDescription = (index, description) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index].description = description;\n    updateData('supportingDocuments', updatedDocuments);\n  };\n  const getDocumentsByCategory = category => {\n    return documents.filter(doc => doc.category === category);\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const getRequiredDocuments = () => {\n    return [{\n      category: 'lab_test',\n      title: 'Laboratory Test Results',\n      description: 'Third-party lab tests for identity, purity, and potency of active ingredients',\n      required: true\n    }, {\n      category: 'factory_cert',\n      title: 'Manufacturing Certifications',\n      description: 'GMP certificates, facility licenses, and quality system certifications',\n      required: true\n    }, {\n      category: 'coa',\n      title: 'Certificate of Analysis',\n      description: 'COA for each batch of raw materials and finished product',\n      required: true\n    }, {\n      category: 'scientific_study',\n      title: 'Scientific Evidence',\n      description: 'Published studies supporting health claims (if applicable)',\n      required: false\n    }];\n  };\n  const isFormValid = () => {\n    const requiredDocs = getRequiredDocuments().filter(doc => doc.required);\n    return requiredDocs.every(reqDoc => getDocumentsByCategory(reqDoc.category).length > 0);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Supporting Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 3\n      },\n      children: \"Upload all required supporting documents to verify your product claims and manufacturing quality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Document Requirements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: getRequiredDocuments().map(reqDoc => {\n          const uploadedDocs = getDocumentsByCategory(reqDoc.category);\n          const isComplete = uploadedDocs.length > 0;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                border: 1,\n                borderColor: isComplete ? 'success.main' : reqDoc.required ? 'error.main' : 'grey.300',\n                borderRadius: 1,\n                bgcolor: isComplete ? 'success.light' : 'background.paper'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 1\n                },\n                children: [isComplete ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                  color: \"success\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this) : reqDoc.required ? /*#__PURE__*/_jsxDEV(ErrorIcon, {\n                  color: \"error\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(FileIcon, {\n                  color: \"action\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: [reqDoc.title, reqDoc.required && /*#__PURE__*/_jsxDEV(Chip, {\n                    label: \"Required\",\n                    size: \"small\",\n                    color: \"error\",\n                    sx: {\n                      ml: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 1\n                },\n                children: reqDoc.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: isComplete ? 'success.main' : 'text.secondary',\n                children: [uploadedDocs.length, \" document\", uploadedDocs.length !== 1 ? 's' : '', \" uploaded\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, reqDoc.category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), documentCategories.map(category => /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: category.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 26\n          }, this),\n          onClick: () => {\n            fileInputRef.current.click();\n            fileInputRef.current.onchange = e => {\n              if (e.target.files.length > 0) {\n                handleFileUpload(e.target.files, category.value);\n              }\n            };\n          },\n          children: \"Upload Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: getDocumentsByCategory(category.value).map((doc, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n            sx: {\n              mr: 2,\n              color: 'primary.main'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: doc.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: doc.status,\n                size: \"small\",\n                color: doc.status === 'uploaded' ? 'success' : 'default'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: [formatFileSize(doc.fileSize), \" \\u2022 Uploaded \", new Date(doc.uploadedAt).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Description (optional)\",\n                value: doc.description,\n                onChange: e => updateDocumentDescription(documents.findIndex(d => d.id === doc.id), e.target.value),\n                sx: {\n                  mt: 1\n                },\n                helperText: \"Describe what this document contains or proves\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              color: \"error\",\n              onClick: () => removeDocument(documents.findIndex(d => d.id === doc.id)),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)]\n        }, doc.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), getDocumentsByCategory(category.value).length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mt: 2\n        },\n        children: \"No documents uploaded for this category yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }, this)]\n    }, category.value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this)), Object.keys(uploadProgress).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Uploading Files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), Object.entries(uploadProgress).map(([fileId, progress]) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: fileId.split('_').slice(1).join('_')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this)]\n      }, fileId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this), Object.keys(uploadErrors).length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: \"Upload Errors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), Object.entries(uploadErrors).map(([fileId, error]) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [fileId.split('_').slice(1).join('_'), \": \", error]\n      }, fileId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      multiple: true,\n      accept: \".pdf,.doc,.docx,.jpg,.jpeg,.png,.xls,.xlsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3,\n        bgcolor: 'info.light'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Document Guidelines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"div\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"All documents must be in English or include certified translations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Laboratory tests must be from accredited third-party laboratories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Certificates must be current and not expired\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"File formats accepted: PDF, DOC, DOCX, JPG, PNG, XLS, XLSX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Maximum file size: 10MB per file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ensure all documents are clearly legible and complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), !isFormValid() && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: \"Missing Required Documents:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), getRequiredDocuments().filter(reqDoc => reqDoc.required && getDocumentsByCategory(reqDoc.category).length === 0).map(reqDoc => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"\\u2022 \", reqDoc.title]\n      }, reqDoc.category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onBack,\n        size: \"large\",\n        children: \"Back: Health Claims\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: onNext,\n        disabled: !isFormValid(),\n        size: \"large\",\n        children: \"Next: Review & Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentsStep, \"85Adqq7s3bnTtO51O+SBRfTcX4M=\");\n_c = DocumentsStep;\nexport default DocumentsStep;\nvar _c;\n$RefreshReg$(_c, \"DocumentsStep\");","map":{"version":3,"names":["React","useState","useRef","Box","Typography","Button","Grid","Paper","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Alert","LinearProgress","Chip","FormControl","InputLabel","Select","MenuItem","TextField","Divider","CloudUpload","UploadIcon","Delete","DeleteIcon","InsertDriveFile","FileIcon","CheckCircle","CheckIcon","Error","ErrorIcon","Visibility","PreviewIcon","GetApp","DownloadIcon","jsxDEV","_jsxDEV","DocumentsStep","data","updateData","onNext","onBack","_s","uploadProgress","setUploadProgress","uploadErrors","setUploadErrors","fileInputRef","documentCategories","value","label","documents","supportingDocuments","handleFileUpload","files","category","fileArray","Array","from","file","fileId","Date","now","name","prev","formData","FormData","append","id","response","fetch","method","headers","localStorage","getItem","body","ok","result","json","newDocument","fileName","fileSize","size","fileType","type","uploadedAt","toISOString","status","url","description","linkedTo","updatedDocuments","newProgress","error","message","removeDocument","index","filter","_","i","updateDocumentDescription","getDocumentsByCategory","doc","formatFileSize","bytes","k","sizes","Math","floor","log","parseFloat","pow","toFixed","getRequiredDocuments","title","required","isFormValid","requiredDocs","every","reqDoc","length","children","variant","gutterBottom","_jsxFileName","lineNumber","columnNumber","color","sx","mb","p","container","spacing","map","uploadedDocs","isComplete","item","xs","md","border","borderColor","borderRadius","bgcolor","display","alignItems","mr","ml","justifyContent","startIcon","onClick","current","click","onchange","e","target","divider","primary","gap","secondary","toLocaleDateString","fullWidth","onChange","findIndex","d","mt","helperText","edge","severity","Object","keys","entries","progress","split","slice","join","ref","style","multiple","accept","component","disabled","_c","$RefreshReg$"],"sources":["C:/Users/monty/OneDrive/ドキュメント/OpenSupplementsInitiative/client/src/components/submission/DocumentsStep.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Alert,\r\n  LinearProgress,\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Divider\r\n} from '@mui/material';\r\nimport {\r\n  CloudUpload as UploadIcon,\r\n  Delete as DeleteIcon,\r\n  InsertDriveFile as FileIcon,\r\n  CheckCircle as CheckIcon,\r\n  Error as ErrorIcon,\r\n  Visibility as PreviewIcon,\r\n  GetApp as DownloadIcon\r\n} from '@mui/icons-material';\r\n\r\nconst DocumentsStep = ({ data, updateData, onNext, onBack }) => {\r\n  const [uploadProgress, setUploadProgress] = useState({});\r\n  const [uploadErrors, setUploadErrors] = useState({});\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Document categories for organization\r\n  const documentCategories = [\r\n    { value: 'lab_test', label: 'Laboratory Test Results' },\r\n    { value: 'factory_cert', label: 'Factory Certifications (GMP, ISO)' },\r\n    { value: 'regulatory_approval', label: 'Regulatory Approvals' },\r\n    { value: 'scientific_study', label: 'Scientific Studies' },\r\n    { value: 'coa', label: 'Certificate of Analysis' },\r\n    { value: 'safety_data', label: 'Safety Data Sheets' },\r\n    { value: 'stability_study', label: 'Stability Studies' },\r\n    { value: 'other', label: 'Other Supporting Documents' }\r\n  ];\r\n\r\n  // Initialize documents array if not exists\r\n  const documents = data.supportingDocuments || [];\r\n\r\n  const handleFileUpload = async (files, category) => {\r\n    const fileArray = Array.from(files);\r\n    \r\n    for (const file of fileArray) {\r\n      const fileId = `${Date.now()}_${file.name}`;\r\n      \r\n      try {\r\n        setUploadProgress(prev => ({ ...prev, [fileId]: 0 }));\r\n        \r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('category', category);\r\n        formData.append('supplementId', data.id || 'new');\r\n\r\n        const response = await fetch('/api/documents/upload', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          },\r\n          body: formData\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          \r\n          const newDocument = {\r\n            id: result.id,\r\n            fileName: file.name,\r\n            fileSize: file.size,\r\n            fileType: file.type,\r\n            category: category,\r\n            uploadedAt: new Date().toISOString(),\r\n            status: 'uploaded',\r\n            url: result.url,\r\n            description: '',\r\n            linkedTo: [] // Can link to specific ingredients or claims\r\n          };\r\n\r\n          const updatedDocuments = [...documents, newDocument];\r\n          updateData('supportingDocuments', updatedDocuments);\r\n          \r\n          setUploadProgress(prev => {\r\n            const newProgress = { ...prev };\r\n            delete newProgress[fileId];\r\n            return newProgress;\r\n          });\r\n        } else {\r\n          throw new Error('Upload failed');\r\n        }\r\n      } catch (error) {\r\n        setUploadErrors(prev => ({ ...prev, [fileId]: error.message }));\r\n        setUploadProgress(prev => {\r\n          const newProgress = { ...prev };\r\n          delete newProgress[fileId];\r\n          return newProgress;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeDocument = (index) => {\r\n    const updatedDocuments = documents.filter((_, i) => i !== index);\r\n    updateData('supportingDocuments', updatedDocuments);\r\n  };\r\n\r\n  const updateDocumentDescription = (index, description) => {\r\n    const updatedDocuments = [...documents];\r\n    updatedDocuments[index].description = description;\r\n    updateData('supportingDocuments', updatedDocuments);\r\n  };\r\n\r\n  const getDocumentsByCategory = (category) => {\r\n    return documents.filter(doc => doc.category === category);\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const getRequiredDocuments = () => {\r\n    return [\r\n      {\r\n        category: 'lab_test',\r\n        title: 'Laboratory Test Results',\r\n        description: 'Third-party lab tests for identity, purity, and potency of active ingredients',\r\n        required: true\r\n      },\r\n      {\r\n        category: 'factory_cert',\r\n        title: 'Manufacturing Certifications',\r\n        description: 'GMP certificates, facility licenses, and quality system certifications',\r\n        required: true\r\n      },\r\n      {\r\n        category: 'coa',\r\n        title: 'Certificate of Analysis',\r\n        description: 'COA for each batch of raw materials and finished product',\r\n        required: true\r\n      },\r\n      {\r\n        category: 'scientific_study',\r\n        title: 'Scientific Evidence',\r\n        description: 'Published studies supporting health claims (if applicable)',\r\n        required: false\r\n      }\r\n    ];\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    const requiredDocs = getRequiredDocuments().filter(doc => doc.required);\r\n    return requiredDocs.every(reqDoc => \r\n      getDocumentsByCategory(reqDoc.category).length > 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Supporting Documents\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n        Upload all required supporting documents to verify your product claims and manufacturing quality\r\n      </Typography>\r\n\r\n      {/* Document Requirements Overview */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Document Requirements\r\n        </Typography>\r\n        \r\n        <Grid container spacing={2}>\r\n          {getRequiredDocuments().map((reqDoc) => {\r\n            const uploadedDocs = getDocumentsByCategory(reqDoc.category);\r\n            const isComplete = uploadedDocs.length > 0;\r\n            \r\n            return (\r\n              <Grid item xs={12} md={6} key={reqDoc.category}>\r\n                <Box sx={{ \r\n                  p: 2, \r\n                  border: 1, \r\n                  borderColor: isComplete ? 'success.main' : reqDoc.required ? 'error.main' : 'grey.300',\r\n                  borderRadius: 1,\r\n                  bgcolor: isComplete ? 'success.light' : 'background.paper'\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                    {isComplete ? (\r\n                      <CheckIcon color=\"success\" sx={{ mr: 1 }} />\r\n                    ) : reqDoc.required ? (\r\n                      <ErrorIcon color=\"error\" sx={{ mr: 1 }} />\r\n                    ) : (\r\n                      <FileIcon color=\"action\" sx={{ mr: 1 }} />\r\n                    )}\r\n                    <Typography variant=\"subtitle1\">\r\n                      {reqDoc.title}\r\n                      {reqDoc.required && <Chip label=\"Required\" size=\"small\" color=\"error\" sx={{ ml: 1 }} />}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                    {reqDoc.description}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color={isComplete ? 'success.main' : 'text.secondary'}>\r\n                    {uploadedDocs.length} document{uploadedDocs.length !== 1 ? 's' : ''} uploaded\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Paper>\r\n\r\n      {/* Document Upload Sections */}\r\n      {documentCategories.map((category) => (\r\n        <Paper key={category.value} sx={{ p: 3, mb: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\">\r\n              {category.label}\r\n            </Typography>\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<UploadIcon />}\r\n              onClick={() => {\r\n                fileInputRef.current.click();\r\n                fileInputRef.current.onchange = (e) => {\r\n                  if (e.target.files.length > 0) {\r\n                    handleFileUpload(e.target.files, category.value);\r\n                  }\r\n                };\r\n              }}\r\n            >\r\n              Upload Files\r\n            </Button>\r\n          </Box>\r\n\r\n          {/* Uploaded Documents List */}\r\n          <List>\r\n            {getDocumentsByCategory(category.value).map((doc, index) => (\r\n              <ListItem key={doc.id || index} divider>\r\n                <FileIcon sx={{ mr: 2, color: 'primary.main' }} />\r\n                <ListItemText\r\n                  primary={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <Typography variant=\"body1\">{doc.fileName}</Typography>\r\n                      <Chip \r\n                        label={doc.status} \r\n                        size=\"small\" \r\n                        color={doc.status === 'uploaded' ? 'success' : 'default'}\r\n                      />\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Box>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {formatFileSize(doc.fileSize)} • Uploaded {new Date(doc.uploadedAt).toLocaleDateString()}\r\n                      </Typography>\r\n                      <TextField\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        label=\"Description (optional)\"\r\n                        value={doc.description}\r\n                        onChange={(e) => updateDocumentDescription(\r\n                          documents.findIndex(d => d.id === doc.id), \r\n                          e.target.value\r\n                        )}\r\n                        sx={{ mt: 1 }}\r\n                        helperText=\"Describe what this document contains or proves\"\r\n                      />\r\n                    </Box>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    color=\"error\"\r\n                    onClick={() => removeDocument(documents.findIndex(d => d.id === doc.id))}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n\r\n          {getDocumentsByCategory(category.value).length === 0 && (\r\n            <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n              No documents uploaded for this category yet\r\n            </Alert>\r\n          )}\r\n        </Paper>\r\n      ))}\r\n\r\n      {/* Upload Progress */}\r\n      {Object.keys(uploadProgress).length > 0 && (\r\n        <Paper sx={{ p: 2, mb: 3 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Uploading Files...\r\n          </Typography>\r\n          {Object.entries(uploadProgress).map(([fileId, progress]) => (\r\n            <Box key={fileId} sx={{ mb: 1 }}>\r\n              <Typography variant=\"body2\">{fileId.split('_').slice(1).join('_')}</Typography>\r\n              <LinearProgress variant=\"determinate\" value={progress} />\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      )}\r\n\r\n      {/* Upload Errors */}\r\n      {Object.keys(uploadErrors).length > 0 && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\">Upload Errors:</Typography>\r\n          {Object.entries(uploadErrors).map(([fileId, error]) => (\r\n            <Typography key={fileId} variant=\"body2\">\r\n              {fileId.split('_').slice(1).join('_')}: {error}\r\n            </Typography>\r\n          ))}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Hidden File Input */}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n        multiple\r\n        accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png,.xls,.xlsx\"\r\n      />\r\n\r\n      {/* Document Guidelines */}\r\n      <Paper sx={{ p: 3, mb: 3, bgcolor: 'info.light' }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Document Guidelines\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"div\">\r\n          <ul>\r\n            <li>All documents must be in English or include certified translations</li>\r\n            <li>Laboratory tests must be from accredited third-party laboratories</li>\r\n            <li>Certificates must be current and not expired</li>\r\n            <li>File formats accepted: PDF, DOC, DOCX, JPG, PNG, XLS, XLSX</li>\r\n            <li>Maximum file size: 10MB per file</li>\r\n            <li>Ensure all documents are clearly legible and complete</li>\r\n          </ul>\r\n        </Typography>\r\n      </Paper>\r\n\r\n      {/* Validation Summary */}\r\n      {!isFormValid() && (\r\n        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\">Missing Required Documents:</Typography>\r\n          {getRequiredDocuments()\r\n            .filter(reqDoc => reqDoc.required && getDocumentsByCategory(reqDoc.category).length === 0)\r\n            .map(reqDoc => (\r\n              <Typography key={reqDoc.category} variant=\"body2\">\r\n                • {reqDoc.title}\r\n              </Typography>\r\n            ))}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Navigation */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 3 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={onBack}\r\n          size=\"large\"\r\n        >\r\n          Back: Health Claims\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={onNext}\r\n          disabled={!isFormValid()}\r\n          size=\"large\"\r\n        >\r\n          Next: Review & Submit\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DocumentsStep;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}